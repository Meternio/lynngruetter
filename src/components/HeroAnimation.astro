---
import lynnWhite from "../assets/lynnWhite.svg";
import { Image } from "astro:assets";
---

<div
  class="hero-animation-background h-svh w-full fixed hero-animation z-10"
  data-hero-animation-background
>
  <div data-hero-animation-background-color class="hero-animation-background-color hero-animation-background-color-1 bg-violet absolute left-0 top-0 w-full h-full z-40"></div>
  <div data-hero-animation-background-color class="hero-animation-background-color hero-animation-background-color-2 bg-green absolute left-0 top-0 w-full h-full z-30"></div>
  <div data-hero-animation-background-color class="hero-animation-background-color hero-animation-background-color-3 bg-petrol absolute left-0 top-0 w-full h-full z-20"></div>
  <div data-hero-animation-background-color class="hero-animation-background-color hero-animation-background-color-4 bg-blue absolute left-0 top-0 w-full h-full z-10"></div>
  <a
    class="absolute left-4 bottom-4 mix-blend-difference text-white"
    target="_blank"
    href="https://www.instagram.com/lynngruetter"
  >
    @lynngruetter
  </a>
</div>

<div
  class="overflow-hidden fixed z-30 top-4 w-full h-fit mix-blend-difference hero-animation-text-wrapper min-w-[375px]"
  data-hero-animation-text
>
  <h1 class="visually-hidden">Lynn Gr√ºtter</h1>
  <Image
    fetchpriority="high"
    src={lynnWhite}
    alt="Lynn Gruetter's signature"
    width="984"
    height="302"
    class="hero-animation-text mx-4 opacity-0 blur-sm"
    data-hero-animation-text-image
    loading="eager"
  />
</div>

<script is:inline>
  const headerNavContentLynn = document.querySelector(
    "[data-hero-animation-text-image]"
  );

  if (headerNavContentLynn.complete) {
    headerNavContentLynn.classList.remove("opacity-0", "blur-sm");
    headerNavContentLynn.classList.add("slideFromLeftToRight");
  } else {
    headerNavContentLynn.addEventListener("load", (e) => {
      headerNavContentLynn.classList.remove("opacity-0", "blur-sm");
      headerNavContentLynn.classList.add("slideFromLeftToRight");
    });
  }
</script>

<script>
  const heroAnimationText = document.querySelector(
    "[data-hero-animation-text]"
  );
  let isIntersecting = false;
  if (heroAnimationText) {
    const body = document.querySelector("[data-body]");
    const main = document.querySelector("[data-main]");
    const heroAnimationBackground = document.querySelector(
      "[data-hero-animation-background]"
    );
    const heroVideo = document.querySelector(
      "[data-storyblok] > [data-hero]:first-child [data-hero-video], [data-storyblok] > [data-scroll-section]:first-child [data-hero] [data-hero-video]"
    );
    const headerNavContentMenu = document.querySelector(
      "[data-header-nav-content-menu]"
    );
    const header = document.querySelector("[data-header]");
    const headerNavLogo = document.querySelector("[data-header-nav-logo]");
    const headerNavLogoWhite = document.querySelector(
      "[data-header-nav-logo-white]"
    );

    /*let bottomPosition = heroAnimationText.getBoundingClientRect();
    headerNavContentMenu.style.transform = `translateY(${bottomPosition.bottom}px)`;
    headerNavContentMenu.classList.remove("opacity-0");*/
    setTimeout(function () {
      headerNavContentMenu.style.transition = `transform 0.75s ease-in-out`;
      headerNavContentMenu.classList.add("header-nav-content-menu-animation");
      header.style.transition = `background 0.75s ease-in-out, transform .325s ease-in-out`;
    }, 3000);
    setTimeout(function () {
      body.classList.remove("overflow-hidden");
      heroAnimationBackground.classList.add("opacity-0");
      main.classList.remove("opacity-0", "bg-gray");
      header.classList.remove("pointer-events-none");

      if (window.innerWidth >= 1024) {
        header.classList.remove("mix-blend-difference", "text-white");
        header.classList.add("text-black");
        headerNavLogo.classList.remove("opacity-0");
        headerNavLogoWhite.classList.add("opacity-0");
      }

      if (heroVideo) {
        // on play callback for video
        heroVideo.play().then(() => {
          const observer = new IntersectionObserver(
            (entries) => {
              entries.forEach((entry) => {
                if (entry.isIntersecting && !isIntersecting) {
                  heroVideo.play().then(() => {
                    isIntersecting = true;
                  });
                } else if (isIntersecting) {
                  heroVideo.pause();
                  observer.unobserve(heroVideo);
                }
              });
            },
            { threshold: 0.5 }
          );

          observer.observe(heroVideo);
        });
      }
      //header.classList.add("bg-white", "text-black");
    }, 3750);
    setTimeout(function () {
      if (window.innerWidth >= 1024) {
        heroAnimationText.classList.add("opacity-0");
      }
    }, 4500);
    setTimeout(function () {
      heroAnimationText.classList.add("hidden");
      heroAnimationBackground.classList.add("hidden");
    }, 5250);
  }
</script>

<style>
  :global(main) {
    transition: opacity 0.75s ease-in-out;
  }

  :global(.header-nav-content-menu-animation) {
    transition: transform 0.75s ease-in-out;
    transform: none !important;
  }

  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .hero-animation-background {
    /*will-change: background-color;
    animation: 3s linear colorChangeBackground forwards;
    @apply bg-violet;*/
    transition: opacity 0.75s ease-in-out;
  }

  .hero-animation-background-color {
    transition: opacity 0.75s ease-in-out;
    will-change: opacity;
    transform: translateZ(0);
  }

  .hero-animation-background-color-1 {
    opacity: 1;
    animation: 0.4s ease-in-out 1s forwards fadeOutOpacity;
  }

  .hero-animation-background-color-2 {
    animation: 0.4s ease-in-out 0.8s forwards fadeInOpacity, 0.4s ease-in-out 2.2s forwards fadeOutOpacity;
  }

  .hero-animation-background-color-3 {
    animation: 0.4s ease-in-out 2s forwards fadeInOpacity, 0.4s ease-in-out 3s forwards fadeOutOpacity;
  }

  .hero-animation-background-color-4 {
    animation: 0.4s ease-in-out 2.8s forwards fadeInOpacity;
  }

  .hero-animation-text {
    will-change: transform;
    transition:
      opacity 0.4s ease-in-out,
      filter 0.2s ease-in-out;
    min-width: 1408px;
  }

  .hero-animation-text-wrapper {
    transition: opacity 0.75s ease-in-out;
  }

  .slideFromLeftToRight {
    animation: 10s linear slideFromLeftToRight infinite;
  }

  @keyframes fadeInOpacity {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fadeOutOpacity {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes slideFromLeftToRight {
    0% {
      transform: translateX(100svw);
    }
    100% {
      transform: translateX(calc(-100% - 32px));
    }
  }

  @keyframes colorChangeBackground {
    0%,
    22% {
      @apply bg-violet;
    }
    33%,
    55% {
      @apply bg-green;
    }
    66%,
    88% {
      @apply bg-petrol;
    }
    100% {
      @apply bg-blue;
    }
  }

  @media (max-width: 1023px) {
    .hero-animation-background,
    .hero-animation-text-wrapper {
      display: block;
      opacity: 1;
    }

    .hero-animation-background {
      position: relative;
    }

    .hero-animation-text-wrapper {
      position: absolute;
    }
  }

  @media (min-width: 1024px) {
    .hero-animation-text {
      animation: none;
    }

    .hero-animation-text {
      width: calc(100% - 32px);
      min-width: auto;
    }
  }
</style>
