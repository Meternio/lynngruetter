<div
  class="hero-animation-background h-svh w-svw fixed hero-animation"
  data-hero-animation-background
>
</div>

<h1
  class="hero-animation-text uppercase text-[40.5svw] max-h-svh max-w-svw fixed z-30 top-24 line-h leading-[0.58]"
  data-hero-animation-text
>
  Lynn
</h1>

<div
  class="hero-animation-text uppercase text-[40.5svw] max-h-svh max-w-svw fixed z-30 top-24 line-h leading-[0.58] mix-blend-difference opacity-0"
  data-hero-animation-text-mix-blend-mode
>
  Lynn
</div>

<script>
  const heroAnimationText = document.querySelector(
    "[data-hero-animation-text]"
  );
  const heroAnimationTextMixBlendMode = document.querySelector(
    "[data-hero-animation-text-mix-blend-mode]"
  );
  const heroAnimationBackground = document.querySelector(
    "[data-hero-animation-background]"
  );
  const heroVideo = document.querySelector(
    "[data-storyblok] > [data-hero]:first-child [data-hero-video]"
  );
  const headerNavContentMenu = document.querySelector(
    "[data-header-nav-content-menu]"
  );

  let bottomPosition = heroAnimationText.getBoundingClientRect();
  headerNavContentMenu.style.transform = `translateY(calc(${
    bottomPosition.bottom
  }px + 5vw))`;

  setTimeout(function () {
    document.querySelector("[data-body]").classList.remove("overflow-hidden");
    document.querySelector("[data-main]").classList.remove("opacity-0");
    heroAnimationBackground.classList.add("opacity-0");
    heroAnimationText.classList.add("opacity-0");
    heroAnimationTextMixBlendMode.classList.remove("opacity-0");
    if (heroVideo) {
      heroVideo.play();
    }
  }, 3750);
  setTimeout(function () {
    heroAnimationTextMixBlendMode.classList.add("opacity-0");
    headerNavContentMenu.classList.add("header-nav-content-menu-animation");
  }, 4500);
  setTimeout(function () {
    document
      .querySelectorAll(
        "[data-hero-animation-text], [data-hero-animation-text-mix-blend-mode], [data-hero-animation-background]"
      )
      .forEach((element) => element.remove());
  }, 5250);
</script>

<style>
  :global(main) {
    transition: opacity 0.75s ease-in-out;
  }

  :global(.header) {
    animation: 3s linear colorChangeText forwards, 1.7s 3.875s ease-in-out colorChangeTextHeader forwards;
  }

  :global(.header-nav-content-menu-animation) {
    transition: transform 0.75s ease-in-out;
    transform: none !important;
  }

  .hero-animation-background {
    animation: 3s linear colorChangeBackground forwards;
    @apply bg-violet;
    transition: opacity 0.75s ease-in-out;
  }

  .hero-animation-text {
    animation: 3s linear colorChangeText forwards;
    @apply text-darkGreen;
    transition: opacity 0.75s ease-in-out;
  }

  .hero-animation-text-mix-blend-mode {
    transition: opacity 0.75s ease-in-out;
  }

  @keyframes colorChangeBackground {
    0%, 25% {
      @apply bg-violet;
    }
    50%, 75% {
      @apply bg-green;
    }
    100% {
      @apply bg-blue;
    }
  }
  @keyframes colorChangeText {
    0%, 25% {
      @apply text-darkGreen;
    }
    50%, 75% {
      @apply text-pink;
    }
    100% {
      @apply text-brown;
    }
  }

  @keyframes colorChangeTextHeader {
    0% {
      @apply text-brown;
    }
    25% {
      mix-blend-mode: difference;
    }
    100% {
      @apply text-white;
      mix-blend-mode: none;
    }
  }
</style>
