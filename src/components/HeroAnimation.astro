---
import lynnWhite from "../assets/lynnWhite.svg";
import { Image } from "astro:assets";
---

<div
  class="hero-animation-background h-svh w-svw fixed hero-animation z-10"
  data-hero-animation-background
>
</div>

<div
  class="overflow-hidden fixed z-30 top-24 w-full h-fit mix-blend-difference hero-animation-text-wrapper"
  data-hero-animation-text
>
  <h1 class="visually-hidden">Lynn Gr√ºtter</h1>
  <Image
    src={lynnWhite}
    alt="Lynn Gruetter's signature"
    width="984"
    height="302"
    class="hero-animation-text mx-4"
  />
</div>

<script>
  const heroAnimationText = document.querySelector(
    "[data-hero-animation-text]"
  );
  if (heroAnimationText) {
    const body = document.querySelector("[data-body]");
    const main = document.querySelector("[data-main]");
    const heroAnimationBackground = document.querySelector(
      "[data-hero-animation-background]"
    );
    const heroVideo = document.querySelector(
      "[data-storyblok] > [data-hero]:first-child [data-hero-video], [data-storyblok] > [data-scroll-section]:first-child [data-hero] [data-hero-video]"
    );
    const headerNavContentMenu = document.querySelector(
      "[data-header-nav-content-menu]"
    );

    window.scrollTo(0, 0);
    body.classList.add("overflow-hidden");
    main.classList.add("opacity-0");
    headerNavContentMenu.querySelectorAll("a").forEach((link) => {
      link.classList.add("text-white");
    });
    let bottomPosition = heroAnimationText.getBoundingClientRect();
    headerNavContentMenu.style.transform = `translateY(${bottomPosition.bottom}px)`;

    setTimeout(function () {
      body.classList.remove("overflow-hidden");
      main.classList.remove("opacity-0");
      heroAnimationBackground.classList.add("opacity-0");
      heroAnimationText.classList.add("opacity-0");

      // Play video if screen above 1023px
      if (heroVideo && window.innerWidth >= 1024) {
        heroVideo.play();
      }
    }, 3750);
    setTimeout(function () {
      headerNavContentMenu.style.transition = `all 0.75s ease-in-out`;
      headerNavContentMenu.classList.add("header-nav-content-menu-animation");
    }, 4500);
    setTimeout(function () {
      heroAnimationText.classList.add("hidden");
      heroAnimationBackground.classList.add("hidden");
      headerNavContentMenu.querySelectorAll("a").forEach((link) => {
        link.classList.remove("text-white");
      });
    }, 5250);
  }
</script>

<style>
  :global(main) {
    transition: opacity 0.75s ease-in-out;
  }

  :global(.header-nav-content-menu-animation) {
    transition: transform 0.75s ease-in-out;
    transform: none !important;
  }

  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .hero-animation-background {
    animation: 3s linear colorChangeBackground forwards;
    @apply bg-violet;
    transition: opacity 0.75s ease-in-out;
  }

  .hero-animation-text {
    animation: 2.25s linear slideFromLeftToRight forwards 0.75s;
    min-width: 1408px;
  }

  .hero-animation-text-wrapper {
    transition: opacity 0.75s ease-in-out;
  }

  @keyframes slideFromLeftToRight {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-100% + 100svw - 32px));
    }
  }

  @keyframes colorChangeBackground {
    0%,
    18% {
      @apply bg-violet;
    }
    33%,
    51% {
      @apply bg-green;
    }
    66%,
    84% {
      @apply bg-brown;
    }
    100% {
      @apply bg-gray;
    }
  }

  @media (max-width: 1023px) {
    .hero-animation-background,
    .hero-animation-text-wrapper {
      display: block;
      opacity: 1;
    }

    .hero-animation-background {
      position: relative;
    }

    .hero-animation-text-wrapper {
      position: absolute;
    }
  }

  @media (min-width: 1024px) {
    .hero-animation-text {
      animation: none;
    }
  }
</style>
