---
import { storyblokEditable } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

const { blok, color } = Astro.props;
const maxWidth = blok.fullWidth ? "100" : blok.maxWidth;
---

<div
  {...storyblokEditable(blok)}
  class=`row-container gap-12 grid grid-flow-col ${!blok.fullWidth ? 'container mx-auto' : ''}`
  style=`grid-template-columns: repeat(${blok.columns}, minmax(0, 1fr));`
>
  {
    blok.content?.map((innerBlok, index) => {
      return <div style={`order: ${blok.swapOrderOnMobile ? (blok.content.length - index) : index}`}><StoryblokComponent blok={innerBlok} color={color} /></div>;
    })
  }
</div>

<style define:vars={{ maxWidth }}>
  @media screen and (min-width: 1024px) {
    .row-container > :global(*) {
      max-width: calc(var(--maxWidth, 100) * 1%);
      order: 0 !important;
    }
  }

  @media screen and (max-width: 1023px) {
    .row-container {
      grid-template-columns: 1fr !important;
      grid-auto-flow: row;
    }
  }

  .row-container :global(.text-section) {
    padding: 0;
  }

  .row-container > div :global(> .text-section-content) {
    margin-top: 0;
  }

  .row-container + .row-container {
    margin-top: 6rem;
  }
</style>
