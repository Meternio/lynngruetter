---
import { storyblokEditable } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";

const { blok, color } = Astro.props;
const maxWidth = blok.fullWidth ? "100" : blok.maxWidth;
---

<div
  {...storyblokEditable(blok)}
  class=`row-container gap-12 grid grid-flow-col ${!blok.fullWidth ? 'container mx-auto' : ''} ${blok?.fadeInAndOut ? "fade-in opacity-0 -translate-y-12" : ""}`
  {...{
    "data-row-intersect": blok?.fadeInAndOut ? true : false,
  }}
  {...{
    style:
      blok?.columns >= 2 ? `grid-template-columns: calc(60% - 3rem) 1fr;` : "",
  }}
>
  {
    blok.content?.map((innerBlok, index) => {
      return (
        <div
          style={`order: ${blok.swapOrderOnMobile ? blok.content.length - index : index}`}
        >
          <StoryblokComponent blok={innerBlok} color={color} />
        </div>
      );
    })
  }
</div>

<style define:vars={{ maxWidth }}>
  @media screen and (min-width: 1024px) {
    .row-container > :global(*) {
      max-width: calc(var(--maxWidth, 100) * 1%);
      order: 0 !important;
    }
  }

  @media screen and (max-width: 1023px) {
    .row-container {
      grid-template-columns: 1fr !important;
      grid-auto-flow: row;
    }
  }

  .row-container.fade-in {
    transition: opacity 0.75s ease-in-out, transform 0.75s ease-in-out;
  }

  .row-container :global(.text-section) {
    padding: 0;
  }

  .row-container > div :global(> .text-section-content) {
    margin-top: 0;
  }

  .row-container + .row-container {
    margin-top: 6rem;
  }

  .row-container :global(a) {
    color: rgba(0, 0, 0, 0.4);
    text-decoration: underline;
  }
</style>

<script>
  // Intersection Observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(
      (entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.remove("opacity-0", "-translate-y-12");
        } else {
          entry.target.classList.add("opacity-0", "-translate-y-12");
        }
      },
      {
        threshold: 0.6,
      }
    );
  });

  document.querySelectorAll("[data-row-intersect]").forEach((el) => {
    observer.observe(el);
  });
</script>
